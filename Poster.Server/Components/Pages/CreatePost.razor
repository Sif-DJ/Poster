@using Poster.Core.DTOs
@using Poster.Infrastructure.Repositories
@inherits Poster.Server.Components.Layout.PageLayout
@inject PostRepository PostRepo

<MudOverlay @bind-Visible="@isVisible" DarkBackground="true">
    <MudPaper Outlined="true" Style="padding: 10px;" Width="500px">
        <MudStack Justify="Justify.Center">
            <MudText Typo="Typo.h6">Create a Post!</MudText>
            <MudTextField @bind-Value="postTitle"
                          Variant="Variant.Outlined"
                          HelperText="Title"
                          AutoGrow="true"
                          MaxLines="5"/>
            <MudTextField @bind-Value="postContent"
                          Variant="Variant.Outlined"
                          HelperText="Content"
                          AutoGrow="true"
                          MaxLines="10"/>
        </MudStack>
    </MudPaper>
    <MudStack Row StretchItems="StretchItems.All"
              Style="margin-top: 10px">
        <MudButton Color="Color.Error"
                   Variant="Variant.Filled"
                   OnClick="@(() => DiscardPost())">
            Discard
        </MudButton>
        <MudButton Color="Color.Info" Variant="Variant.Filled" OnClick="@(() => MakePost())">Post!</MudButton>
    </MudStack>
</MudOverlay>




@code {
    
    [Parameter]
    public bool isVisible { get; set; }
    
    [Parameter]
    public UserDTO user { get; set; }

    private string postTitle;
    private string postContent;

    private async Task MakePost()
    {
        await PostRepo.AddPost(user, postTitle, postContent);
        isVisible = false;
        Layout.DisplayCreatePost = false;
        NavMan.Refresh(true);
    }

    private async Task DiscardPost()
    {
        postTitle = "";
        postContent = "";
        isVisible = false;
        Layout.DisplayCreatePost = false;
    }
    
}